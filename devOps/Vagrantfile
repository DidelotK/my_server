# -*- mode: ruby -*-

VAGRANT_COMMAND = ARGV[0]

# Vagrant configs
$vagrant_version = "2"
# User configs
$admin_user = "admin"
$admin_user_path_ssh_key_public = "~/.ssh/superuser_id_rsa.pub"
$admin_user_path_ssh_key_private = "~/.ssh/superuser_id_rsa"
# Ansible configs
$ansible_extra_vars = {
  default_user: '',
  admin_user: $admin_user,
  remote_path_to_admin_user_ssh_key: $admin_user_path_ssh_key_public
}
$ansible_inventory = {
  "all" => ["webapp", "controller"]
}

Vagrant.configure($vagrant_version) do |config|
 
  if VAGRANT_COMMAND == "ssh"
      config.ssh.username = $admin_user
      config.ssh.private_key_path = $admin_user_path_ssh_key_private
      config.ssh.forward_agent = true
  end

  # Define webapp machine
  config.vm.define "webapp" do |webapp|
    webapp.vm.box = "geerlingguy/ubuntu1604"
    webapp.vm.hostname = "webapp"
    webapp.vm.network "public_network", ip: "192.168.0.50"

    $ansible_extra_vars['default_user'] = 'ubuntu'
  end

  # Define controller machine
  config.vm.define "controller" do |controller|

    controller.vm.provider "virtualbox" do |v|
        v.memory = 2048
        v.cpus = 2
    end

    controller.vm.box = "geerlingguy/ubuntu1604"
    controller.vm.hostname = "controller"
    controller.vm.network "public_network", ip: "192.168.0.51"

    $ansible_extra_vars['default_user'] = 'ubuntu'
  end

  # Initialization servers
  config.vm.provision "init", type: "ansible" do |ansible|
    ansible.extra_vars = $ansible_extra_vars
    ansible.groups = $ansible_inventory

    ansible.playbook = "ansible/init.configuration.yml"
  end

end
